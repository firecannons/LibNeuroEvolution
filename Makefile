CC=g++
MAKE_OBJ_FLAGS=-c
OPT_FLAGS=-O3
SRCDIR=Source
SAMPLE_1_DIR=Samples/BinarySample
SAMPLE_1_NAME=BinarySample
BIN_PATH=Bin
POP_H_PATH=$(SRCDIR)/Population.h
POP_CPP_PATH=$(SRCDIR)/Population.cpp
POP_OBJ_PATH=$(SRCDIR)/Population.o
HYPER_H_PATH=$(SRCDIR)/HyperParameterGroup.h
HYPER_CPP_PATH=$(SRCDIR)/HyperParameterGroup.cpp
HYPER_OBJ_PATH=$(SRCDIR)/HyperParameterGroup.o
NET_H_PATH=$(SRCDIR)/NeuralNetwork.h
NET_CPP_PATH=$(SRCDIR)/NeuralNetwork.cpp
NET_OBJ_PATH=$(SRCDIR)/NeuralNetwork.o
LAYER_H_PATH=$(SRCDIR)/Layer.h
LAYER_CPP_PATH=$(SRCDIR)/Layer.cpp
LAYER_OBJ_PATH=$(SRCDIR)/Layer.o
MATH_H_PATH=$(SRCDIR)/LibNeuroEvolutionMath.h
MATH_CPP_PATH=$(SRCDIR)/LibNeuroEvolutionMath.cpp
MATH_OBJ_PATH=$(SRCDIR)/LibNeuroEvolutionMath.o
REQUIRED_OBJS=$(POP_OBJ_PATH) $(HYPER_OBJ_PATH) $(NET_OBJ_PATH) $(LAYER_OBJ_PATH) $(MATH_OBJ_PATH)

all: $(REQUIRED_OBJS)
	rm -r -f $(BIN_PATH)
	mkdir $(BIN_PATH)
	$(CC) $(OPT_FLAGS) $(SAMPLE_1_DIR)/$(SAMPLE_1_NAME).cpp $(REQUIRED_OBJS) -L$(SRCDIR) -o $(BIN_PATH)/$(SAMPLE_1_NAME) -I$(SRCDIR)

$(POP_OBJ_PATH): $(POP_H_PATH) $(POP_CPP_PATH) $(HYPER_OBJ_PATH)
	$(CC) $(MAKE_OBJ_FLAGS) $(OPT_FLAGS) $(POP_CPP_PATH) -o $(POP_OBJ_PATH)

$(HYPER_OBJ_PATH): $(HYPER_H_PATH) $(HYPER_CPP_PATH) $(NET_OBJ_PATH)
	$(CC) $(MAKE_OBJ_FLAGS) $(OPT_FLAGS) $(HYPER_CPP_PATH) -o $(HYPER_OBJ_PATH)

$(NET_OBJ_PATH): $(NET_H_PATH) $(NET_CPP_PATH) $(LAYER_OBJ_PATH)
	$(CC) $(MAKE_OBJ_FLAGS) $(OPT_FLAGS) $(NET_CPP_PATH) -o $(NET_OBJ_PATH)

$(LAYER_OBJ_PATH): $(LAYER_H_PATH) $(LAYER_CPP_PATH)
	$(CC) $(MAKE_OBJ_FLAGS) $(OPT_FLAGS) $(LAYER_CPP_PATH) -o $(LAYER_OBJ_PATH)

$(MATH_OBJ_PATH): $(MATH_H_PATH) $(MATH_CPP_PATH)
	$(CC) $(MAKE_OBJ_FLAGS) $(OPT_FLAGS) $(MATH_CPP_PATH) -o $(MATH_OBJ_PATH)

clean:
	rm -f $(SRCDIR)/*.o
	rm -r -f Bin

.PHONY : clean all
